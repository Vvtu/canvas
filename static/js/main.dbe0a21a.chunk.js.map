{"version":3,"sources":["utils/index.ts","canvas/CoordinateGrid.js","canvas/ScaleButtons.js","canvas/Lines.js","canvas/Triangle.js","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["COLOR","distance","a","b","Math","sqrt","x","y","fixedValue","Number","isInteger","toFixed","roundPointValue","point","p1","round","isChanged","abs","intersectionPoint","line1","line2","e","dx1","p2","dx2","dy1","dy2","a1","b1","c1","a2","b2","c2","i","bb2","CoordinateGrid","width","height","scale","canvasCoordinateGridRef","useRef","toReal","useCallback","useEffect","current","canvasBase","coordinatesGridRef","getContext","clearRect","strokeStyle","lineWidth","beginPath","lines","max","from","to","moveTo","lineTo","closePath","stroke","from2","to2","className","ref","ScaleButtons","setScale","onClick","calcMessage","point1","point2","message","dx","dy","k","Lines","props","canvasRef","timeoutId","useState","isPainting","setIsPainting","setPoint1","setPoint2","point3","setPoint3","point4","setPoint4","twoLineIntersection","setTwoLineIntersection","fromReal","clearTimeout","updateLineWithNewCoordinates","event","canvas","coordinate","pageX","offsetLeft","pageY","offsetTop","indexMin","dist","forEach","d","index","setTimeout","mouseUp","mouseDown","addEventListener","removeEventListener","context","drawLine","startPoint","endPoint","color","arc","PI","undefined","font","fillStyle","fillText","intersec","inter","id","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","style","REAL_POINTS_BASE","name","prev","next","Triangle","points","setPoints","distMin","MAX_VALUE","newPoints","map","p","realPoints","bisectrArr","triangleSides","seredPerpenArr","pNext","pPrev","push","median","atanBi","atan2","bisectrPoint","cos","sin","letterCoorditate","atanHeight","heightPoint","inCenterPoint","trianglePerimeter","inCenterRadius","outCenterPoint","outCenterRadius","LINES","TRIANGLE","Routes","path","App","screenSize","setScreenSize","updateSize","rect","getBoundingClientRect","useLayoutEffect","window","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbe0a21a.chunk.js","sourcesContent":["export const COLOR = {\n  line1: \"red\",\n  line2: \"blue\",\n  base: \"#ddd\",\n  ordinates: \"#000\",\n};\n\nexport type ICoordinate = {\n  x: number;\n  y: number;\n};\n\nexport const distance = (a: ICoordinate, b: ICoordinate) =>\n  Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n\nexport const fixedValue = (x: number) =>\n  Number.isInteger(x) ? x.toFixed(0) : x.toFixed(2);\n\nexport const roundPointValue = (point: ICoordinate) => {\n  const p1 = { ...point };\n  const a = Math.round(p1.x);\n  let isChanged = false;\n  if (Math.abs(a - p1.x) < 0.1) {\n    p1.x = a;\n    isChanged = true;\n  }\n  const b = Math.round(p1.y);\n  if (Math.abs(b - p1.y) < 0.2) {\n    p1.y = b;\n    isChanged = true;\n  }\n  if (isChanged) {\n    return p1;\n  }\n  return point;\n};\n\nexport type ILine = {\n  p1: ICoordinate;\n  p2: ICoordinate;\n};\n\nexport function intersectionPoint(line1: ILine, line2: ILine) {\n  let dx1 = line1.p2.x - line1.p1.x;\n  let dx2 = line2.p2.x - line2.p1.x;\n  let dy1 = line1.p2.y - line1.p1.y;\n  let dy2 = line2.p2.y - line2.p1.y;\n\n  let a1 = dy1;\n  let b1 = -dx1;\n  let c1 = line1.p1.y * dx1 - line1.p1.x * dy1;\n\n  let a2 = dy2;\n  let b2 = -dx2;\n  let c2 = line2.p1.y * dx2 - line2.p1.x * dy2;\n\n  let e;\n  for (let i = 0; i < 2; i += 1) {\n    if (a1 !== 0) {\n      let bb1 = (b1 * a2) / a1;\n      let cc1 = (c1 * a2) / a1;\n      let bb2 = b2 - bb1;\n      if (bb2 !== 0) {\n        let cc2 = c2 - cc1;\n        let y = -cc2 / bb2;\n        let x = (-c1 - b1 * y) / a1;\n        const result = i === 0 ? { x, y } : { x: y, y: x };\n        return result;\n      }\n    }\n    e = a1;\n    a1 = b1;\n    b1 = e;\n    e = a2;\n    a2 = b2;\n    b2 = e;\n  }\n  // --- ПРЯМЫЕ ПАРАЛЕЛЬНЫ ---\n  return {};\n}\n","import { useCallback, useEffect, useRef } from \"react\";\n\nimport { COLOR, ICoordinate } from \"../utils\";\n\nimport { ICanvasProps } from \"./types\";\n\nexport default function CoordinateGrid  ({ width, height, scale }: ICanvasProps) {\n  const canvasCoordinateGridRef = useRef();\n\n  const toReal = useCallback(\n    ({ x, y }: ICoordinate) => ({\n      x: x * scale + width / 2,\n      y: -y * scale + height / 2,\n    }),\n    [height, width, scale]\n  );\n\n  useEffect(() => {\n    if (!canvasCoordinateGridRef.current) {\n      return;\n    }\n    const canvasBase: HTMLCanvasElement = canvasCoordinateGridRef.current;\n    const coordinatesGridRef = canvasBase.getContext(\"2d\");\n    if (coordinatesGridRef) {\n      coordinatesGridRef.clearRect(0, 0, canvasBase.width, canvasBase.height);\n\n      coordinatesGridRef.strokeStyle = COLOR.base;\n      coordinatesGridRef.lineWidth = 1;\n\n      coordinatesGridRef.beginPath();\n\n      const lines = Math.round(\n        Math.max(canvasBase.height, canvasBase.width) / scale / 2\n      );\n      for (let x = -lines; x < lines; x += 1) {\n        const from = toReal({ x, y: 0 });\n        const to = toReal({ x, y: 0 });\n        coordinatesGridRef.moveTo(from.x, 0);\n        coordinatesGridRef.lineTo(to.x, canvasBase.height);\n      }\n      for (let y = -lines; y < lines; y += 1) {\n        const from = toReal({ x: 0, y });\n        const to = toReal({ x: 0, y });\n        coordinatesGridRef.moveTo(0, from.y);\n        coordinatesGridRef.lineTo(canvasBase.width, to.y);\n      }\n      coordinatesGridRef.closePath();\n      coordinatesGridRef.stroke();\n\n      coordinatesGridRef.strokeStyle = COLOR.ordinates;\n      coordinatesGridRef.lineWidth = 1;\n      coordinatesGridRef.beginPath();\n      // x\n      const from = toReal({ x: -lines, y: 0 });\n      const to = toReal({ x: lines, y: 0 });\n      coordinatesGridRef.moveTo(from.x, from.y);\n      coordinatesGridRef.lineTo(to.x + 10, to.y);\n      // arrow x\n      coordinatesGridRef.moveTo(canvasBase.width - 15, to.y - 3);\n      coordinatesGridRef.lineTo(canvasBase.width - 2, to.y);\n      coordinatesGridRef.moveTo(canvasBase.width - 15, to.y + 3);\n      coordinatesGridRef.lineTo(canvasBase.width - 2, to.y);\n      // y\n      const from2 = toReal({ x: 0, y: -lines });\n      const to2 = toReal({ x: 0, y: lines });\n      coordinatesGridRef.moveTo(from2.x, from2.y);\n      coordinatesGridRef.lineTo(to2.x, to2.y);\n      // arrow y\n      coordinatesGridRef.moveTo(to2.x - 3, 15);\n      coordinatesGridRef.lineTo(to2.x, 2);\n      coordinatesGridRef.moveTo(to2.x + 3, 15);\n      coordinatesGridRef.lineTo(to2.x, 2);\n      //\n      coordinatesGridRef.closePath();\n      coordinatesGridRef.stroke();\n    }\n  }, [toReal, scale]);\n\n  return (\n    <div className=\"fullScreen\">\n      <canvas ref={canvasCoordinateGridRef} height={height} width={width} />\n    </div>\n  );\n};","import { ICanvasProps } from \"./types\";\n\nconst SCALE_MULTIPLIER = 1.2;\n\nexport default function ScaleButtons({ scale, setScale }: ICanvasProps) {\n  return (\n    <>\n      <div\n        className=\"scaleButton1\"\n        onClick={() => {\n          setScale(scale * SCALE_MULTIPLIER);\n        }}\n      >\n        +\n      </div>\n      <div\n        className=\"scaleButton2\"\n        onClick={() => {\n          setScale(scale / SCALE_MULTIPLIER);\n        }}\n      >\n        &minus;\n      </div>\n    </>\n  );\n}\n","import { useCallback, useEffect, useRef, useState, Profiler } from \"react\";\nimport CoordinateGrid from \"./CoordinateGrid\";\nimport ScaleButtons from \"./ScaleButtons\";\n\nimport {\n  COLOR,\n  ICoordinate,\n  distance,\n  fixedValue,\n  roundPointValue,\n  intersectionPoint,\n} from \"../utils\";\n\nimport { ICanvasProps } from \"./types\";\n\nconst calcMessage = (point1: ICoordinate, point2: ICoordinate) => {\n  const dx = point2.x - point1.x;\n  const dy = point2.y - point1.y;\n\n  let message;\n  if (dx === 0 && dy === 0) {\n    message = \"точки совпадают\";\n  } else {\n    if (dx === 0) {\n      message = \"k = ∞\";\n    } else {\n      const k = dy / dx;\n      const b = -point1.x * k + point1.y;\n      message = `y = ${fixedValue(k)} * x${\n        b === 0 ? \"\" : ` ${b > 0 ? \"+\" : \"\"} ${fixedValue(b)}`\n      }`;\n    }\n  }\n  return message;\n};\n\nexport default function Lines(props: ICanvasProps) {\n  const { width, height, scale } = props;\n\n  const canvasRef = useRef();\n  const timeoutId = useRef();\n\n  const [isPainting, setIsPainting] = useState(false);\n\n  const [point1, setPoint1] = useState({ x: -2, y: -2 });\n  const [point2, setPoint2] = useState({ x: 2, y: 2 });\n\n  const [point3, setPoint3] = useState({ x: 0, y: -2 });\n  const [point4, setPoint4] = useState({ x: 4, y: 2 });\n  const [twoLineIntersection, setTwoLineIntersection] = useState({});\n\n  const toReal = useCallback(\n    ({ x, y }: ICoordinate) => ({\n      x: x * scale + width / 2,\n      y: -y * scale + height / 2,\n    }),\n    [height, width, scale]\n  );\n  const fromReal = useCallback(\n    ({ x, y }: ICoordinate) => ({\n      x: (x - width / 2) / scale,\n      y: -(y - height / 2) / scale,\n    }),\n    [height, width, scale]\n  );\n\n  useEffect(() => {\n    return () => {\n      if (timeoutId.current) {\n        clearTimeout(timeoutId.current);\n      }\n    };\n  }, []);\n\n  const updateLineWithNewCoordinates = (\n    event: MouseEvent\n  ): ICoordinate | undefined => {\n    if (!canvasRef.current) {\n      return;\n    }\n    if (isPainting === false) {\n      return;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n\n    const coordinate = fromReal({\n      x: event.pageX - canvas.offsetLeft,\n      y: event.pageY - canvas.offsetTop,\n    });\n    let indexMin = 0;\n    const dist = [\n      distance(coordinate, point1),\n      distance(coordinate, point2),\n      distance(coordinate, point3),\n      distance(coordinate, point4),\n    ];\n\n    dist.forEach((d, index) => {\n      if (d < dist[indexMin]) {\n        indexMin = index;\n      }\n    });\n\n    if (dist[indexMin] < 1.0) {\n      switch (indexMin) {\n        case 0:\n          setPoint1(coordinate);\n          break;\n        case 1:\n          setPoint2(coordinate);\n          break;\n        case 2:\n          setPoint3(coordinate);\n          break;\n        case 3:\n          setPoint4(coordinate);\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (timeoutId.current) {\n      clearTimeout(timeoutId.current);\n    }\n\n    timeoutId.current = setTimeout(() => {\n      setPoint1(roundPointValue(point1));\n      setPoint2(roundPointValue(point2));\n      setPoint3(roundPointValue(point3));\n      setPoint4(roundPointValue(point4));\n    }, 300);\n  };\n\n  const mouseUp = () => setIsPainting(false);\n  const mouseDown = () => setIsPainting(true);\n\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n    canvas.addEventListener(\"mousedown\", mouseDown);\n    canvas.addEventListener(\"mousemove\", updateLineWithNewCoordinates);\n    canvas.addEventListener(\"mouseup\", mouseUp);\n    canvas.addEventListener(\"touchstart\", mouseDown);\n    canvas.addEventListener(\"touchend\", mouseUp);\n    canvas.addEventListener(\"touchmove\", updateLineWithNewCoordinates);\n\n    return () => {\n      canvas.removeEventListener(\"mousedown\", mouseDown);\n      canvas.removeEventListener(\"mousemove\", updateLineWithNewCoordinates);\n      canvas.removeEventListener(\"mouseup\", mouseUp);\n      canvas.removeEventListener(\"touchstart\", mouseDown);\n      canvas.removeEventListener(\"touchend\", mouseUp);\n      canvas.removeEventListener(\"touchmove\", updateLineWithNewCoordinates);\n    };\n  });\n\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    if (context) {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      function drawLine(\n        startPoint: ICoordinate,\n        endPoint: ICoordinate,\n        color: string\n      ) {\n        context.strokeStyle = color;\n        context.lineWidth = 3;\n        context.beginPath();\n\n        const from = toReal(startPoint);\n        const to = toReal(endPoint);\n\n        context.moveTo(from.x, from.y);\n        context.arc(from.x, from.y, 3, 0, Math.PI * 2, true);\n        context.moveTo(to.x, to.y);\n        context.arc(to.x, to.y, 3, 0, Math.PI * 2, true);\n\n        let p1 = intersectionPoint(\n          { p1: from, p2: to },\n          { p1: { x: 0, y: 0 }, p2: { x: 0, y: canvas.height } }\n        );\n        let p2 = intersectionPoint(\n          { p1: from, p2: to },\n          {\n            p1: { x: canvas.width, y: 0 },\n            p2: { x: canvas.width, y: canvas.height },\n          }\n        );\n\n        if (p1.x === undefined || p2.x === undefined) {\n          // прямая расположена вертикально\n          p1 = { x: from.x, y: 0 };\n          p2 = { x: from.x, y: canvas.height };\n        }\n\n        context.moveTo(p1.x, p1.y);\n        context.lineTo(p2.x, p2.y);\n\n        context.closePath();\n        context.stroke();\n\n        context.font = \"30px serif\";\n\n        context.fillStyle = color;\n        context.fillText(\n          `(${fixedValue(startPoint.x)} ; ${fixedValue(startPoint.y)} )`,\n          from.x + 15,\n          from.y - 5\n        );\n        context.fillText(\n          `(${fixedValue(endPoint.x)} ; ${fixedValue(endPoint.y)} )`,\n          to.x + 15,\n          to.y - 5\n        );\n      }\n      drawLine(point1, point2, COLOR.line1);\n      drawLine(point3, point4, COLOR.line2);\n      const intersec = intersectionPoint(\n        { p1: point1, p2: point2 },\n        { p1: point3, p2: point4 }\n      );\n\n      setTwoLineIntersection(intersec);\n      if (intersec.x !== undefined) {\n        const inter = toReal(intersec);\n\n        context.strokeStyle = \"grey\";\n        context.lineWidth = 3;\n        context.beginPath();\n        context.moveTo(inter.x, inter.y);\n        context.arc(inter.x, inter.y, 3, 0, Math.PI * 2, true);\n        context.fillStyle = \"black\";\n        context.fillText(\n          `(${fixedValue(intersec.x)} ; ${fixedValue(intersec.y)} )`,\n          inter.x + 15,\n          inter.y - 5\n        );\n        context.closePath();\n        context.stroke();\n      }\n    }\n  }, [point1, point2, point3, point4, toReal]);\n\n  function onRenderCallback(\n    id, // the \"id\" prop of the Profiler tree that has just committed\n    phase, // either \"mount\" (if the tree just mounted) or \"update\" (if it re-rendered)\n    actualDuration, // time spent rendering the committed update\n    baseDuration, // estimated time to render the entire subtree without memoization\n    startTime, // when React began rendering this update\n    commitTime, // when React committed this update\n    interactions // the Set of interactions belonging to this update\n  ) {\n    return;\n    // Aggregate or log render timings...\n    console.log(\"%conRenderCallback id = \", \"color: #bada55\", id); //TODO - delete vvtu\n    console.log(\"%conRenderCallback phase = \", \"color: #bada55\", phase); //TODO - delete vvtu\n    console.log(\n      \"%conRenderCallback actualDuration = \",\n      \"color: #bada55\",\n      actualDuration\n    ); //TODO - delete vvtu\n    console.log(\n      \"%conRenderCallback baseDuration = \",\n      \"color: #bada55\",\n      baseDuration\n    ); //TODO - delete vvtu\n    console.log(\"%conRenderCallback startTime = \", \"color: #bada55\", startTime); //TODO - delete vvtu\n    console.log(\n      \"%conRenderCallback commitTime = \",\n      \"color: #bada55\",\n      commitTime\n    ); //TODO - delete vvtu\n    console.log(\n      \"%conRenderCallback interactions = \",\n      \"color: #bada55\",\n      interactions\n    ); //TODO - delete vvtu\n  }\n\n  return (\n    <Profiler id=\"Navigation\" onRender={onRenderCallback}>\n      <>\n        <CoordinateGrid {...props} />\n        <div className=\"fullScreen\">\n          <canvas ref={canvasRef} height={height} width={width} />\n          <ScaleButtons {...props} />\n        </div>\n        <div className=\"message\">\n          <div style={{ color: COLOR.line1 }}>\n            {calcMessage(point1, point2)}\n          </div>\n          <div style={{ color: COLOR.line2 }}>\n            {calcMessage(point3, point4)}\n          </div>\n          <div style={{ color: \"grey\" }}>\n            {twoLineIntersection.x === undefined\n              ? \"∅ ( прямые паралельны )\"\n              : `точка пересечения (${fixedValue(\n                  twoLineIntersection.x\n                )} ; ${fixedValue(twoLineIntersection.y)} )`}\n          </div>\n        </div>\n      </>\n    </Profiler>\n  );\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport CoordinateGrid from \"./CoordinateGrid\";\nimport ScaleButtons from \"./ScaleButtons\";\n\nimport {\n  COLOR,\n  ICoordinate,\n  distance,\n  fixedValue,\n  roundPointValue,\n  intersectionPoint,\n} from \"../utils\";\n\nimport { ICanvasProps } from \"./types\";\n\nconst REAL_POINTS_BASE = [\n  { name: \"A\", prev: 2, next: 1 },\n  { name: \"B\", prev: 0, next: 2 },\n  { name: \"C\", prev: 1, next: 0 },\n];\n\nconst calcMessage = (point1: ICoordinate, point2: ICoordinate) => {\n  const dx = point2.x - point1.x;\n  const dy = point2.y - point1.y;\n\n  let message;\n  if (dx === 0 && dy === 0) {\n    message = \"точки совпадают\";\n  } else {\n    if (dx === 0) {\n      message = \"k = ∞\";\n    } else {\n      const k = dy / dx;\n      const b = -point1.x * k + point1.y;\n      message = `y = ${fixedValue(k)} * x${\n        b === 0 ? \"\" : ` ${b > 0 ? \"+\" : \"\"} ${fixedValue(b)}`\n      }`;\n    }\n  }\n  return message;\n};\n\nexport default function Triangle(props: ICanvasProps) {\n  const { width, height, scale } = props;\n\n  const canvasRef = useRef();\n  const timeoutId = useRef();\n\n  const [isPainting, setIsPainting] = useState(false);\n\n  const [points, setPoints] = useState([\n    { x: -2, y: -2 },\n    { x: 2, y: 2 },\n    { x: 0, y: -3 },\n  ]);\n\n  const toReal = useCallback(\n    ({ x, y }: ICoordinate) => ({\n      x: x * scale + width / 2,\n      y: -y * scale + height / 2,\n    }),\n    [height, width, scale]\n  );\n  const fromReal = useCallback(\n    ({ x, y }: ICoordinate) => ({\n      x: (x - width / 2) / scale,\n      y: -(y - height / 2) / scale,\n    }),\n    [height, width, scale]\n  );\n\n  useEffect(() => {\n    return () => {\n      if (timeoutId.current) {\n        clearTimeout(timeoutId.current);\n      }\n    };\n  }, []);\n\n  const updateLineWithNewCoordinates = (\n    event: MouseEvent\n  ): ICoordinate | undefined => {\n    if (!canvasRef.current) {\n      return;\n    }\n    if (isPainting === false) {\n      return;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n\n    const coordinate = fromReal({\n      x: event.pageX - canvas.offsetLeft,\n      y: event.pageY - canvas.offsetTop,\n    });\n    let indexMin = 0;\n    let distMin = Number.MAX_VALUE;\n\n    points.forEach((point, index) => {\n      const dist = distance(point, coordinate);\n      if (distMin >= dist) {\n        distMin = dist;\n        indexMin = index;\n      }\n    });\n    if (distMin < 1.0) {\n      const newPoints = [...points];\n      newPoints[indexMin] = coordinate;\n      setPoints(newPoints);\n    }\n\n    if (timeoutId.current) {\n      clearTimeout(timeoutId.current);\n    }\n\n    timeoutId.current = setTimeout(() => {\n      const newPoints = points.map((p) => roundPointValue(p));\n      setPoints(newPoints);\n    }, 300);\n  };\n\n  const mouseUp = () => setIsPainting(false);\n  const mouseDown = () => setIsPainting(true);\n\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n    canvas.addEventListener(\"mousedown\", mouseDown);\n    canvas.addEventListener(\"mousemove\", updateLineWithNewCoordinates);\n    canvas.addEventListener(\"mouseup\", mouseUp);\n    canvas.addEventListener(\"touchstart\", mouseDown);\n    canvas.addEventListener(\"touchend\", mouseUp);\n    canvas.addEventListener(\"touchmove\", updateLineWithNewCoordinates);\n\n    return () => {\n      canvas.removeEventListener(\"mousedown\", mouseDown);\n      canvas.removeEventListener(\"mousemove\", updateLineWithNewCoordinates);\n      canvas.removeEventListener(\"mouseup\", mouseUp);\n      canvas.removeEventListener(\"touchstart\", mouseDown);\n      canvas.removeEventListener(\"touchend\", mouseUp);\n      canvas.removeEventListener(\"touchmove\", updateLineWithNewCoordinates);\n    };\n  });\n\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    if (context) {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      const realPoints = points.map((p, index) => ({\n        ...REAL_POINTS_BASE[index],\n        point: toReal(p),\n      }));\n\n      const bisectrArr = [];\n      const triangleSides = [];\n      const seredPerpenArr = [];\n\n      realPoints.forEach((p) => {\n        const pNext = realPoints[p.next].point;\n        const pPrev = realPoints[p.prev].point;\n\n        triangleSides.push(distance(pNext, pPrev));\n\n        let p1 = intersectionPoint(\n          { p1: p.point, p2: pNext },\n          { p1: { x: 0, y: 0 }, p2: { x: 0, y: canvas.height } }\n        );\n        let p2 = intersectionPoint(\n          { p1: p.point, p2: pNext },\n          {\n            p1: { x: canvas.width, y: 0 },\n            p2: { x: canvas.width, y: canvas.height },\n          }\n        );\n\n        if (p1.x === undefined || p2.x === undefined) {\n          // прямая расположена вертикально\n          p1 = { x: p.point.x, y: 0 };\n          p2 = { x: p.point.x, y: canvas.height };\n        }\n        context.strokeStyle = COLOR.base;\n        context.lineWidth = 1;\n        context.beginPath();\n\n        context.moveTo(p1.x, p1.y);\n        context.lineTo(p2.x, p2.y);\n\n        context.closePath();\n        context.stroke();\n\n        context.lineWidth = 4;\n        context.strokeStyle = COLOR.line1;\n        context.beginPath();\n\n        context.moveTo(p.point.x, p.point.y);\n        context.lineTo(pNext.x, pNext.y);\n\n        context.closePath();\n        context.stroke();\n        // медиана\n        const median = {\n          x: (pPrev.x + pNext.x) / 2,\n          y: (pPrev.y + pNext.y) / 2,\n        };\n\n        context.lineWidth = 1;\n        context.strokeStyle = \"#004\";\n        context.beginPath();\n\n        context.moveTo(p.point.x, p.point.y);\n        context.lineTo(median.x, median.y);\n\n        context.closePath();\n        context.stroke();\n\n        // бисектрисса\n        const atanBisectrissa1 = Math.atan2(\n          pPrev.y - p.point.y,\n          pPrev.x - p.point.x\n        );\n        const atanBisectrissa2 = Math.atan2(\n          pNext.y - p.point.y,\n          pNext.x - p.point.x\n        );\n\n        const atanBi = (atanBisectrissa1 + atanBisectrissa2) / 2;\n\n        const bisectrPoint = intersectionPoint(\n          { p1: pNext, p2: pPrev },\n          {\n            p1: p.point,\n            p2: {\n              x: p.point.x + Math.cos(atanBi),\n              y: p.point.y + Math.sin(atanBi),\n            },\n          }\n        );\n        bisectrArr.push({ p1: p.point, p2: bisectrPoint });\n        context.lineWidth = 1;\n        context.strokeStyle = \"green\";\n        context.beginPath();\n        context.moveTo(p.point.x, p.point.y);\n        context.lineTo(bisectrPoint.x, bisectrPoint.y);\n        context.closePath();\n        context.stroke();\n\n        // БУКВА вершины\n        let letterCoorditate = {\n          x: p.point.x - 30 * Math.cos(atanBi),\n          y: p.point.y - 30 * Math.sin(atanBi),\n        };\n\n        const di = distance(p.point, bisectrPoint);\n        const diLetter = distance(letterCoorditate, bisectrPoint);\n        if (di > diLetter) {\n          letterCoorditate = {\n            x: p.point.x + 30 * Math.cos(atanBi),\n            y: p.point.y + 30 * Math.sin(atanBi),\n          };\n        }\n\n        context.font = \"30px serif\";\n        context.fillStyle = COLOR.line1;\n        context.fillText(\n          p.name,\n          letterCoorditate.x - 10,\n          letterCoorditate.y + 7\n        );\n\n        // высота\n        const atanHeight =\n          Math.atan2(pNext.y - pPrev.y, pNext.x - pPrev.x) + Math.PI / 2;\n\n        const heightPoint = intersectionPoint(\n          { p1: pNext, p2: pPrev },\n          {\n            p1: p.point,\n            p2: {\n              x: p.point.x + Math.cos(atanHeight),\n              y: p.point.y + Math.sin(atanHeight),\n            },\n          }\n        );\n\n        seredPerpenArr.push({\n          p1: median,\n          p2: {\n            x: median.x + Math.cos(atanHeight),\n            y: median.y + Math.sin(atanHeight),\n          },\n        });\n\n        context.lineWidth = 1;\n        context.strokeStyle = \"#777\";\n        context.beginPath();\n        context.moveTo(p.point.x, p.point.y);\n        context.lineTo(heightPoint.x, heightPoint.y);\n        context.closePath();\n        context.stroke();\n      });\n      // inCenterArc\n      const inCenterPoint = intersectionPoint(bisectrArr[0], bisectrArr[1]);\n      const trianglePerimeter =\n        (triangleSides[0] + triangleSides[1] + triangleSides[2]) / 2;\n      const inCenterRadius = Math.sqrt(\n        ((trianglePerimeter - triangleSides[0]) *\n          (trianglePerimeter - triangleSides[1]) *\n          (trianglePerimeter - triangleSides[2])) /\n          trianglePerimeter\n      );\n      context.lineWidth = 1;\n      context.strokeStyle = \"brown\";\n      context.beginPath();\n      context.moveTo(inCenterPoint.x + inCenterRadius, inCenterPoint.y);\n      context.arc(\n        inCenterPoint.x,\n        inCenterPoint.y,\n        inCenterRadius,\n        0,\n        Math.PI * 2,\n        true\n      );\n      context.closePath();\n      context.stroke();\n\n      // outCenterArc\n      const outCenterPoint = intersectionPoint(\n        seredPerpenArr[0],\n        seredPerpenArr[1]\n      );\n      const outCenterRadius = distance(outCenterPoint, realPoints[0].point);\n      context.lineWidth = 1;\n      context.strokeStyle = \"brown\";\n      context.beginPath();\n      context.moveTo(outCenterPoint.x + outCenterRadius, outCenterPoint.y);\n      context.arc(\n        outCenterPoint.x,\n        outCenterPoint.y,\n        outCenterRadius,\n        0,\n        Math.PI * 2,\n        true\n      );\n      context.closePath();\n      context.stroke();\n    }\n  }, [points, toReal]);\n\n  return (\n    <>\n      <CoordinateGrid {...props} />\n      <div className=\"fullScreen\">\n        <canvas ref={canvasRef} height={height} width={width} />\n        <ScaleButtons {...props} />\n      </div>\n      {/* <div className=\"message\">\n        <div style={{ color: COLOR.line1 }}>{calcMessage(point1, point2)}</div>\n      </div> */}\n    </>\n  );\n}\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { ICanvasProps } from \"./canvas/types\";\n\nimport Lines from \"./canvas/Lines\";\nimport Triangle from \"./canvas/Triangle\";\n\nconst LINES = \"/lines\";\nconst TRIANGLE = \"/triangle\";\n\nexport default function Routes(props: ICanvasProps) {\n  return (\n    <Router>\n      <Switch>\n        <Route path={LINES}>\n          <Lines {...props} />\n        </Route>\n        <Route path={TRIANGLE}>\n          <Triangle {...props} />\n        </Route>\n        <Route path=\"/\">\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to={LINES}>Lines</Link>\n              </li>\n              <li>\n                <Link to={TRIANGLE}>Triangle</Link>\n              </li>\n            </ul>\n          </nav>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import Routes from \"./Routes\";\nimport \"./App.css\";\n\nimport { useLayoutEffect, useRef, useState } from \"react\";\nconst INITIAL_SCALE_VALUE = 60;\n\nfunction App() {\n  const ref = useRef<any>();\n  const timeoutId = useRef<any>();\n  const [screenSize, setScreenSize] = useState({ width: 600, height: 600 });\n  const [scale, setScale] = useState(INITIAL_SCALE_VALUE);\n\n  function updateSize() {\n    if (timeoutId.current) {\n      clearTimeout(timeoutId.current);\n    }\n    timeoutId.current = setTimeout(() => {\n      if (ref.current) {\n        const rect = ref.current.getBoundingClientRect();\n        setScreenSize({ width: rect.width, height: rect.height });\n      }\n    }, 200);\n  }\n\n  useLayoutEffect(() => {\n    updateSize();\n    window.addEventListener(\"resize\", updateSize);\n    return () => {\n      window.removeEventListener(\"resize\", updateSize);\n      if (timeoutId.current) {\n        clearTimeout(timeoutId.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"App fullScreen\" ref={ref}>\n      <Routes\n        width={screenSize.width}\n        height={screenSize.height}\n        scale={scale}\n        setScale={setScale}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}